name: Python package

on: 
  push:
    branches: [master]

jobs:
  run_tests:
    name: Run tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: nosetests

  push_to_registry:
    name: Build Docker image and push to Docker Hub
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: desmondrivet/micropub-git-server

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy docker image
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
    - name: remote deploy of docker image
      uses: appleboy/ssh-action@v1.0.3
      env:
        GH_REPO: ${{secrets.GH_REPO}}
        GH_USERNAME: ${{secrets.GH_USERNAME}}
        GH_SECRET: ${{secrets.GH_SECRET}}
        ME: ${{secrets.ME}}
        TOKEN_ENDPOINT: ${{secrets.TOKEN_ENDPOINT}}
        MICROPUB_MEDIA_ENDPOINT:  ${{secrets.MICROPUB_MEDIA_ENDPOINT}}
        MICROPUB_REPO_PATH_FORMAT:  ${{secrets.MICROPUB_REPO_PATH_FORMAT}}
        MICROPUB_PERMALINK_FORMAT: ${{secrets.MICROPUB_PERMALINK_FORMAT}}
      with:
        host: ${{ secrets.PROD_HOST }}
        port: ${{ secrets.SSH_PORT }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        envs: GH_REPO,GH_USERNAME,GH_SECRET,ME,TOKEN_ENDPOINT,MICROPUB_MEDIA_ENDPOINT,MICROPUB_REPO_PATH_FORMAT,MICROPUB_PERMALINK_FORMAT
        script: |
          docker pull desmondrivet/micropub-git-server:master
          docker stop micropub-git-server
          docker run --name micropub-git-server -p 3032:3031 -v mp-root:/data --rm -d desmondrivet/micropub-git-server:master
